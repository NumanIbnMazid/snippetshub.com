version: '1.0'

services:
  nginx:
    container_name: 'nginx'
    build: ./nginx
    ports:
      - 9001:80
    volumes:
      - web-static:/home/app/snippetshub/static
    depends_on:
      - web
    restart: "on-failure"
  db:
    image: postgres:11-alpine
    volumes:
      - ./init.sql:/docker-entrypoint-initdb.d/init.sql
      - postgres_data:/var/lib/postgresql/data/
    environment:
      - POSTGRES_PASSWORD=${POSTGRES_PASSWORD}
      - POSTGRES_DB=${DB_NAME}
      - PGPORT=${DB_PORT}
      - POSTGRES_USER=${POSTGRES_USER}
    restart: "on-failure"
  redis:
    container_name: 'redis'
    image: redis:alpine
    ports:
      - '6378:6379'
    volumes:
      - 'redisdata:/data'
    restart: "on-failure"
  memcached:
    container_name: 'memcached'
    image: 'memcached:latest'
    ports:
      - "11212:11211"
    restart: "on-failure"
  web:
    build: . #build the image for the web service from the dockerfile in parent directory
    command: sh -c "poetry run python manage.py makemigrations &&
                    poetry run python manage.py migrate &&
                    poetry run python manage.py initiate_admin &&
                    poetry run python manage.py collectstatic --noinput &&
                    poetry run gunicorn config.asgi:application -k uvicorn.workers.UvicornWorker --bind 0.0.0.0:${APP_PORT}"
    volumes:
      # - .:/snippetshub:rw # map data and files from parent directory in host to snippetshub directory in docker containe
      # - static_volume:/home/app/snippetshub/static
      - web-django:/home/app/snippetshub
      - web-static:/home/app/snippetshub/static
    env_file:
      - .env
    image: snippetshub

    expose:
      - ${APP_PORT}
    restart: "on-failure"
    depends_on:
      - db
      - redis
      - memcached

volumes:
  postgres_data:
  redisdata:
  web-django:
  web-static: